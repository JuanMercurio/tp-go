// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juanmercurio/tp-go/internal/ports (interfaces: Cotizador)
//
// Generated by this command:
//
//	mockgen --destination=./mock/cotizador.go github.com/juanmercurio/tp-go/internal/ports Cotizador
//

// Package mock_ports is a generated GoMock package.
package mock_ports

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCotizador is a mock of Cotizador interface.
type MockCotizador struct {
	ctrl     *gomock.Controller
	recorder *MockCotizadorMockRecorder
}

// MockCotizadorMockRecorder is the mock recorder for MockCotizador.
type MockCotizadorMockRecorder struct {
	mock *MockCotizador
}

// NewMockCotizador creates a new mock instance.
func NewMockCotizador(ctrl *gomock.Controller) *MockCotizador {
	mock := &MockCotizador{ctrl: ctrl}
	mock.recorder = &MockCotizadorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCotizador) EXPECT() *MockCotizadorMockRecorder {
	return m.recorder
}

// Cotizar mocks base method.
func (m *MockCotizador) Cotizar(arg0 string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cotizar", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Cotizar indicates an expected call of Cotizar.
func (mr *MockCotizadorMockRecorder) Cotizar(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cotizar", reflect.TypeOf((*MockCotizador)(nil).Cotizar), arg0)
}

// ExisteMoneda mocks base method.
func (m *MockCotizador) ExisteMoneda(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExisteMoneda", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExisteMoneda indicates an expected call of ExisteMoneda.
func (mr *MockCotizadorMockRecorder) ExisteMoneda(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExisteMoneda", reflect.TypeOf((*MockCotizador)(nil).ExisteMoneda), arg0)
}

// GetNombre mocks base method.
func (m *MockCotizador) GetNombre() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNombre")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetNombre indicates an expected call of GetNombre.
func (mr *MockCotizadorMockRecorder) GetNombre() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNombre", reflect.TypeOf((*MockCotizador)(nil).GetNombre))
}
